{"version":3,"file":"ngx-webstorage.js","sources":["ng://ngx-webstorage/lib/constants/strategy.ts","ng://ngx-webstorage/lib/helpers/compat.ts","ng://ngx-webstorage/lib/helpers/noop.ts","ng://ngx-webstorage/lib/constants/config.ts","ng://ngx-webstorage/lib/helpers/storageKeyManager.ts","ng://ngx-webstorage/lib/core/templates/syncStorage.ts","ng://ngx-webstorage/lib/core/templates/asyncStorage.ts","ng://ngx-webstorage/lib/core/strategyCache.ts","ng://ngx-webstorage/lib/core/nativeStorage.ts","ng://ngx-webstorage/lib/strategies/baseSyncStorage.ts","ng://ngx-webstorage/lib/strategies/localStorage.ts","ng://ngx-webstorage/lib/strategies/sessionStorage.ts","ng://ngx-webstorage/lib/strategies/inMemory.ts","ng://ngx-webstorage/lib/strategies/index.ts","ng://ngx-webstorage/stubs/storageStrategy.stub.ts","ng://ngx-webstorage/stubs/storage.stub.ts","ng://ngx-webstorage/lib/services/strategyIndex.ts","ng://ngx-webstorage/lib/services/localStorage.ts","ng://ngx-webstorage/lib/services/sessionStorage.ts","ng://ngx-webstorage/lib/helpers/decoratorBuilder.ts","ng://ngx-webstorage/lib/decorators.ts","ng://ngx-webstorage/lib/services/index.ts","ng://ngx-webstorage/lib/module.ts"],"sourcesContent":["export enum StorageStrategies {\n\tLocal = 'local_strategy',\n\tSession = 'session_strategy',\n\tInMemory = 'in_memory_strategy'\n}\n","import {WebStorage} from '../core/interfaces/webStorage';\n\nexport class CompatHelper {\n\n\tstatic isStorageAvailable(storage: WebStorage): boolean {\n\t\tlet available = true;\n\t\ttry {\n\t\t\tif (typeof storage === 'object') {\n\t\t\t\tstorage.setItem('test-storage', 'foobar');\n\t\t\t\tstorage.removeItem('test-storage');\n\t\t\t}\n\t\t\telse available = false;\n\t\t} catch(e) {\n\t\t\tavailable = false;\n\t\t}\n\t\treturn available;\n\t}\n\n}\n\n","export function noop() {}\n","export const DefaultPrefix = 'ngx-webstorage';\nexport const DefaultSeparator = '|';\nexport const DefaultIsCaseSensitive = false;\n","import {DefaultIsCaseSensitive, DefaultPrefix, DefaultSeparator} from '../constants/config';\nimport {NgxWebstorageConfiguration} from '../config';\n\nexport class StorageKeyManager {\n\t\n\tstatic prefix = DefaultPrefix;\n\tstatic separator = DefaultSeparator;\n\tstatic isCaseSensitive = DefaultIsCaseSensitive;\n\t\n\tstatic normalize(raw: string) {\n\t\traw = StorageKeyManager.isCaseSensitive ? raw : raw.toLowerCase();\n\t\treturn `${StorageKeyManager.prefix}${StorageKeyManager.separator}${raw}`;\n\t}\n\t\n\tstatic isNormalizedKey(key: string) {\n\t\treturn key.indexOf(StorageKeyManager.prefix + StorageKeyManager.separator) === 0;\n\t}\n\t\n\tstatic setPrefix(prefix: string) {\n\t\tStorageKeyManager.prefix = prefix;\n\t}\n\t\n\tstatic setSeparator(separator: string) {\n\t\tStorageKeyManager.separator = separator;\n\t}\n\t\n\tstatic setCaseSensitive(enable: boolean) {\n\t\tStorageKeyManager.isCaseSensitive = enable;\n\t}\n\t\n\tstatic consumeConfiguration(config: NgxWebstorageConfiguration) {\n\t\tif ('prefix' in config) this.setPrefix(config.prefix);\n\t\tif ('separator' in config) this.setSeparator(config.separator);\n\t\tif ('caseSensitive' in config) this.setCaseSensitive(config.caseSensitive);\n\t}\n}\n","import {StorageStrategy} from '../interfaces/storageStrategy';\nimport {noop} from '../../helpers/noop';\nimport {StorageService} from '../interfaces/storageService';\nimport {StorageKeyManager} from '../../helpers/storageKeyManager';\nimport {Observable} from 'rxjs';\nimport {distinctUntilChanged, filter, shareReplay, switchMap} from 'rxjs/operators';\n\nexport class SyncStorage implements StorageService {\n\tconstructor(protected strategy: StorageStrategy<any>) {\n\t}\n\n\tretrieve(key: string): any {\n\t\tlet value: any;\n\t\tthis.strategy.get(StorageKeyManager.normalize(key)).subscribe((result) => value = typeof result === 'undefined' ? null : result);\n\t\treturn value;\n\t}\n\n\tstore(key: string, value: any): any {\n\t\tthis.strategy.set(StorageKeyManager.normalize(key), value).subscribe(noop);\n\t\treturn value;\n\t}\n\n\tclear(key?: string): void {\n\t\tif (key !== undefined)\n\t\t\tthis.strategy.del(StorageKeyManager.normalize(key)).subscribe(noop);\n\t\telse this.strategy.clear().subscribe(noop);\n\t}\n\n\tgetStrategyName(): string {return this.strategy.name; }\n\n\tobserve(key: string): Observable<any> {\n\t\tkey = StorageKeyManager.normalize(key);\n\t\treturn this.strategy.keyChanges.pipe(\n\t\t\tfilter((changed: string) => changed === null || changed === key),\n\t\t\tswitchMap(() => this.strategy.get(key)),\n\t\t\tdistinctUntilChanged(),\n\t\t\tshareReplay()\n\t\t);\n\t}\n\n}\n","import {StorageStrategy} from '../interfaces/storageStrategy';\nimport {Observable} from 'rxjs';\nimport {StorageService} from '../interfaces/storageService';\nimport {StorageKeyManager} from '../../helpers/storageKeyManager';\nimport {distinctUntilChanged, filter, map, shareReplay, switchMap} from 'rxjs/operators';\n\nexport class AsyncStorage implements StorageService {\n\n\tconstructor(protected strategy: StorageStrategy<any>) {\n\t}\n\n\tretrieve(key: string): Observable<any> {\n\t\treturn this.strategy.get(StorageKeyManager.normalize(key)).pipe(\n\t\t\tmap((value: any) => typeof value === 'undefined' ? null : value)\n\t\t);\n\t}\n\n\tstore(key: string, value: any): Observable<any> {\n\t\treturn this.strategy.set(StorageKeyManager.normalize(key), value);\n\t}\n\n\tclear(key?: string): Observable<void> {\n\t\treturn key !== undefined ? this.strategy.del(StorageKeyManager.normalize(key)) : this.strategy.clear();\n\t}\n\n\tgetStrategyName(): string { return this.strategy.name; }\n\n\tobserve(key: string): Observable<any> {\n\t\tkey = StorageKeyManager.normalize(key);\n\t\treturn this.strategy.keyChanges.pipe(\n\t\t\tfilter((changed: string) => changed === null || changed === key),\n\t\t\tswitchMap(() => this.strategy.get(key)),\n\t\t\tdistinctUntilChanged(),\n\t\t\tshareReplay()\n\t\t);\n\t}\n}\n","import {Injectable} from '@angular/core';\n\nexport interface StrategyCache {\n\t[key: string]: any;\n}\n\n@Injectable({providedIn: 'root'})\nexport class StrategyCacheService {\n\n\tprotected caches: { [name: string]: StrategyCache } = {};\n\n\tget(strategyName: string, key: string) {\n\t\treturn this.getCacheStore(strategyName)[key];\n\t}\n\n\tset(strategyName: string, key: string, value: any) {\n\t\tthis.getCacheStore(strategyName)[key] = value;\n\t}\n\n\tdel(strategyName: string, key: string) {\n\t\tdelete this.getCacheStore(strategyName)[key];\n\t}\n\n\tclear(strategyName: string) {\n\t\tthis.caches[strategyName] = {} as StrategyCache;\n\t}\n\n\tprotected getCacheStore(strategyName: string): StrategyCache {\n\t\tif (strategyName in this.caches) return this.caches[strategyName];\n\t\treturn this.caches[strategyName] = {} as StrategyCache;\n\t}\n}\n","import {FactoryProvider, InjectionToken} from '@angular/core';\nimport {WebStorage} from './interfaces/webStorage';\n\nexport const LOCAL_STORAGE: InjectionToken<WebStorage> = new InjectionToken<WebStorage>('window_local_storage');\n\nexport function getLocalStorage() {\n\treturn (typeof window !== 'undefined') ? window.localStorage : null;\n}\n\nexport const LocalStorageProvider: FactoryProvider = {provide: LOCAL_STORAGE, useFactory: getLocalStorage};\n\nexport const SESSION_STORAGE: InjectionToken<WebStorage> = new InjectionToken<WebStorage>('window_session_storage');\n\nexport function getSessionStorage() {\n\treturn (typeof window !== 'undefined') ? window.sessionStorage : null;\n}\n\nexport const SessionStorageProvider: FactoryProvider = {provide: SESSION_STORAGE, useFactory: getSessionStorage};\n","import {StorageStrategy} from '../core/interfaces/storageStrategy';\nimport {Observable, of, Subject} from 'rxjs';\nimport {StrategyCacheService} from '../core/strategyCache';\nimport {CompatHelper} from '../helpers/compat';\nimport {WebStorage} from '../core/interfaces/webStorage';\n\nexport abstract class BaseSyncStorageStrategy implements StorageStrategy<any> {\n\treadonly keyChanges: Subject<string> = new Subject();\n\tabstract readonly name: string;\n\n\tconstructor(protected storage: WebStorage, protected cache: StrategyCacheService) {}\n\n\tprotected _isAvailable: boolean;\n\n\tget isAvailable(): boolean {\n\t\tif (this._isAvailable === undefined) this._isAvailable = CompatHelper.isStorageAvailable(this.storage);\n\t\treturn this._isAvailable;\n\t}\n\t\n\tget(key: string): Observable<any> {\n\t\tlet data: any = this.cache.get(this.name, key);\n\t\tif (data !== undefined) return of(data);\n\n\t\ttry {\n\t\t\tconst item: any = this.storage.getItem(key);\n\t\t\tif (item !== null) {\n\t\t\t\tdata = JSON.parse(item);\n\t\t\t\tthis.cache.set(this.name, key, data);\n\t\t\t}\n\t\t} catch(err) {\n\t\t\tconsole.warn(err);\n\t\t}\n\n\t\treturn of(data);\n\t}\n\n\tset(key: string, value: any): Observable<any> {\n\t\tconst data: string = JSON.stringify(value);\n\t\tthis.storage.setItem(key, data);\n\t\tthis.cache.set(this.name, key, value);\n\t\tthis.keyChanges.next(key);\n\t\treturn of(value);\n\t}\n\n\tdel(key: string): Observable<void> {\n\t\tthis.storage.removeItem(key);\n\t\tthis.cache.del(this.name, key);\n\t\tthis.keyChanges.next(key);\n\t\treturn of(null);\n\t}\n\n\tclear(): Observable<void> {\n\t\tthis.storage.clear();\n\t\tthis.cache.clear(this.name);\n\t\tthis.keyChanges.next(null);\n\t\treturn of(null);\n\t}\n\n}\n","import {StrategyCacheService} from '../core/strategyCache';\nimport {BaseSyncStorageStrategy} from './baseSyncStorage';\nimport {Inject, NgZone, PLATFORM_ID} from '@angular/core';\nimport {LOCAL_STORAGE} from '../core/nativeStorage';\nimport {StorageStrategies} from '../constants/strategy';\nimport {isPlatformBrowser} from '@angular/common';\nimport {WebStorage} from '../core/interfaces/webStorage';\n\nexport class LocalStorageStrategy extends BaseSyncStorageStrategy {\n\tstatic readonly strategyName: string = StorageStrategies.Local;\n\treadonly name: string = LocalStorageStrategy.strategyName;\n\n\tconstructor(@Inject(LOCAL_STORAGE) protected storage: WebStorage,\n\t            protected cache: StrategyCacheService,\n\t            @Inject(PLATFORM_ID) protected platformId: any,\n\t            protected zone: NgZone) {\n\t\tsuper(storage, cache);\n\t\tif (isPlatformBrowser(this.platformId)) this.listenExternalChanges();\n\t}\n\n\tprotected listenExternalChanges() {\n\t\twindow.addEventListener('storage', (event: StorageEvent) => this.zone.run(() => {\n\t\t\tif (event.storageArea !== this.storage) return;\n\t\t\tconst key: string = event.key;\n\t\t\tif (key !== null) this.cache.del(this.name, event.key);\n\t\t\telse this.cache.clear(this.name);\n\t\t\tthis.keyChanges.next(key);\n\t\t}));\n\t}\n\n}\n","import {StrategyCacheService} from '../core/strategyCache';\nimport {BaseSyncStorageStrategy} from './baseSyncStorage';\nimport {Inject, NgZone, PLATFORM_ID} from '@angular/core';\nimport {SESSION_STORAGE} from '../core/nativeStorage';\nimport {StorageStrategies} from '../constants/strategy';\nimport {isPlatformBrowser} from '@angular/common';\nimport {WebStorage} from '../core/interfaces/webStorage';\n\nexport class SessionStorageStrategy extends BaseSyncStorageStrategy {\n\tstatic readonly strategyName: string = StorageStrategies.Session;\n\treadonly name: string = SessionStorageStrategy.strategyName;\n\n\tconstructor(@Inject(SESSION_STORAGE) protected storage: WebStorage,\n\t            protected cache: StrategyCacheService,\n\t            @Inject(PLATFORM_ID) protected platformId: any,\n\t            protected zone: NgZone) {\n\t\tsuper(storage, cache);\n\t\tif (isPlatformBrowser(this.platformId)) this.listenExternalChanges();\n\t}\n\n\tprotected listenExternalChanges() {\n\t\twindow.addEventListener('storage', (event: StorageEvent) => this.zone.run(() => {\n\t\t\tif (event.storageArea !== this.storage) return;\n\t\t\tconst key: string = event.key;\n\t\t\tif (event.key !== null) this.cache.del(this.name, event.key);\n\t\t\telse this.cache.clear(this.name);\n\t\t\tthis.keyChanges.next(key);\n\t\t}));\n\t}\n\n}\n","import {StorageStrategy} from '../core/interfaces/storageStrategy';\nimport {Observable, of, Subject} from 'rxjs';\nimport {StrategyCacheService} from '../core/strategyCache';\nimport {StorageStrategies} from '../constants/strategy';\nimport {Inject} from '@angular/core';\n\nexport class InMemoryStorageStrategy implements StorageStrategy<any> {\n\tstatic readonly strategyName: string = StorageStrategies.InMemory;\n\treadonly keyChanges: Subject<string> = new Subject();\n\tisAvailable: boolean = true;\n\treadonly name: string = InMemoryStorageStrategy.strategyName;\n\n\tconstructor(@Inject(StrategyCacheService) protected cache: StrategyCacheService) {}\n\n\tget(key: string): Observable<any> {\n\t\treturn of(this.cache.get(this.name, key));\n\t}\n\n\tset(key: string, value: any): Observable<any> {\n\t\tthis.cache.set(this.name, key, value);\n\t\tthis.keyChanges.next(key);\n\t\treturn of(value);\n\t}\n\n\tdel(key: string): Observable<void> {\n\t\tthis.cache.del(this.name, key);\n\t\tthis.keyChanges.next(key);\n\t\treturn of(null);\n\t}\n\n\tclear(): Observable<void> {\n\t\tthis.cache.clear(this.name);\n\t\tthis.keyChanges.next(null);\n\t\treturn of(null);\n\t}\n\n}\n","import {InjectionToken, Provider} from '@angular/core';\nimport {StorageStrategy} from '../core/interfaces/storageStrategy';\nimport {LocalStorageStrategy} from './localStorage';\nimport {SessionStorageStrategy} from './sessionStorage';\nimport {InMemoryStorageStrategy} from './inMemory';\n\nexport const STORAGE_STRATEGIES: InjectionToken<StorageStrategy<any>> = new InjectionToken<StorageStrategy<any>>('STORAGE_STRATEGIES');\n\nexport const Strategies: Provider[] = [\n\t{provide: STORAGE_STRATEGIES, useClass: InMemoryStorageStrategy, multi: true},\n\t{provide: STORAGE_STRATEGIES, useClass: LocalStorageStrategy, multi: true},\n\t{provide: STORAGE_STRATEGIES, useClass: SessionStorageStrategy, multi: true},\n];\n","import {Observable, of, Subject} from 'rxjs';\nimport {StorageStrategy} from '../lib/core/interfaces/storageStrategy';\nimport {Optional} from '@angular/core';\n\nexport const StorageStrategyStubName: string = 'stub_strategy';\n\nexport class StorageStrategyStub implements StorageStrategy<any> {\n\n\treadonly keyChanges: Subject<string> = new Subject();\n\tpublic store: any = {};\n\tpublic _available: boolean = true;\n\treadonly name: string;\n\n\tconstructor(@Optional() name?: string) {\n\t\tthis.name = name || StorageStrategyStubName;\n\t}\n\n\tget isAvailable(): boolean {\n\t\treturn this._available;\n\t}\n\n\tget(key: string): Observable<any> {\n\t\treturn of(this.store[key]);\n\t}\n\n\tset(key: string, value: any): Observable<any> {\n\t\tthis.store[key] = value;\n\t\tthis.keyChanges.next(key);\n\t\treturn of(value);\n\t}\n\n\tdel(key: string): Observable<void> {\n\t\tdelete this.store[key];\n\t\tthis.keyChanges.next(key);\n\t\treturn of(null);\n\t}\n\n\tclear(): Observable<void> {\n\t\tthis.store = {};\n\t\tthis.keyChanges.next(null);\n\t\treturn of(null);\n\t}\n\n}\n","import {WebStorage} from '../lib/core/interfaces/webStorage';\n\nexport class StorageStub implements WebStorage {\n\t[name: string]: any;\n\n\tpublic store: { [prop: string]: any } = {};\n\n\tget length(): number {\n\t\treturn Object.keys(this.store).length;\n\t}\n\n\tclear(): void {\n\t\tthis.store = {};\n\t}\n\n\tgetItem(key: string): string | null {\n\t\treturn this.store[key] || null;\n\t}\n\n\tkey(index: number): string | null {\n\t\treturn Object.keys(this.store)[index];\n\t}\n\n\tremoveItem(key: string): void {\n\t\tdelete this.store[key];\n\t}\n\n\tsetItem(key: string, value: string): void {\n\t\tthis.store[key] = value;\n\t}\n\n}\n","import {StorageStrategy} from '../core/interfaces/storageStrategy';\nimport {Subject} from 'rxjs';\nimport {Inject, Injectable, Optional} from '@angular/core';\nimport {STORAGE_STRATEGIES} from '../strategies';\nimport {StorageStrategies} from '../constants/strategy';\n\nexport const InvalidStrategyError = 'invalid_strategy';\n\n@Injectable({providedIn: 'root'})\nexport class StrategyIndex {\n\n\tstatic index: { [name: string]: StorageStrategy<any> } = {};\n\treadonly registration$: Subject<string> = new Subject();\n\n\tconstructor(@Optional() @Inject(STORAGE_STRATEGIES) protected strategies: StorageStrategy<any>[]) {\n\t\tif (!strategies) strategies = [];\n\t\tthis.strategies = strategies.reverse()\n\t\t\t.map((strategy: StorageStrategy<any>, index, arr) => strategy.name)\n\t\t\t.map((name: string, index, arr) => arr.indexOf(name) === index ? index : null)\n\t\t\t.filter((index: number) => index !== null)\n\t\t\t.map((index: number) => strategies[index]);\n\t}\n\n\tstatic get(name: string): StorageStrategy<any> {\n\t\tif (!this.isStrategyRegistered(name)) throw Error(InvalidStrategyError);\n\t\tlet strategy: StorageStrategy<any> = StrategyIndex.index[name];\n\t\tif (!strategy.isAvailable) {\n\t\t\tstrategy = StrategyIndex.index[StorageStrategies.InMemory];\n\t\t}\n\t\treturn strategy;\n\t}\n\n\tstatic set(name: string, strategy): void {\n\t\tStrategyIndex.index[name] = strategy;\n\t}\n\n\tstatic clear(name?: string): void {\n\t\tif (name !== undefined) delete StrategyIndex.index[name];\n\t\telse StrategyIndex.index = {};\n\t}\n\n\tstatic isStrategyRegistered(name: string): boolean {\n\t\treturn name in StrategyIndex.index;\n\t}\n\n\tstatic hasRegistredStrategies(): boolean {\n\t\treturn Object.keys(StrategyIndex.index).length > 0;\n\t}\n\n\tpublic getStrategy(name: string): StorageStrategy<any> {\n\t\treturn StrategyIndex.get(name);\n\t}\n\n\tpublic indexStrategies() {\n\t\tthis.strategies.forEach((strategy: StorageStrategy<any>) => this.register(strategy.name, strategy));\n\t}\n\n\tpublic indexStrategy(name: string, overrideIfExists: boolean = false): StorageStrategy<any> {\n\t\tif (StrategyIndex.isStrategyRegistered(name) && !overrideIfExists) return StrategyIndex.get(name);\n\t\tconst strategy: StorageStrategy<any> = this.strategies.find((strategy: StorageStrategy<any>) => strategy.name === name);\n\t\tif (!strategy) throw new Error(InvalidStrategyError);\n\t\tthis.register(name, strategy, overrideIfExists);\n\t\treturn strategy;\n\t}\n\n\tpublic register(name: string, strategy: StorageStrategy<any>, overrideIfExists: boolean = false) {\n\t\tif (!StrategyIndex.isStrategyRegistered(name) || overrideIfExists) {\n\t\t\tStrategyIndex.set(name, strategy);\n\t\t\tthis.registration$.next(name);\n\t\t}\n\t}\n\n}\n\n","import {FactoryProvider} from '@angular/core';\nimport {SyncStorage} from '../core/templates/syncStorage';\nimport {StrategyIndex} from './strategyIndex';\nimport {StorageStrategy} from '../core/interfaces/storageStrategy';\nimport {StorageStrategies} from '../constants/strategy';\n\nexport class LocalStorageService extends SyncStorage {}\n\nexport function buildService(index: StrategyIndex) {\n\tconst strategy: StorageStrategy<any> = index.indexStrategy(StorageStrategies.Local);\n\treturn new SyncStorage(strategy);\n}\n\nexport const LocalStorageServiceProvider: FactoryProvider = {\n\tprovide: LocalStorageService,\n\tuseFactory: buildService,\n\tdeps: [StrategyIndex]\n};\n","import {FactoryProvider} from '@angular/core';\nimport {SyncStorage} from '../core/templates/syncStorage';\nimport {StrategyIndex} from './strategyIndex';\nimport {StorageStrategy} from '../core/interfaces/storageStrategy';\nimport {StorageStrategies} from '../constants/strategy';\n\nexport class SessionStorageService extends SyncStorage {}\n\nexport function buildService(index: StrategyIndex) {\n\tconst strategy: StorageStrategy<any> = index.indexStrategy(StorageStrategies.Session);\n\treturn new SyncStorage(strategy);\n}\n\nexport const SessionStorageServiceProvider: FactoryProvider = {\n\tprovide: SessionStorageService,\n\tuseFactory: buildService,\n\tdeps: [StrategyIndex]\n};\n","import {StrategyIndex} from '../services/strategyIndex';\nimport {StorageStrategies} from '../constants/strategy';\nimport {StorageKeyManager} from './storageKeyManager';\nimport {noop} from './noop';\n\nexport class DecoratorBuilder {\n\t\n\tstatic buildSyncStrategyDecorator(strategyName: string | StorageStrategies, prototype, propName: string, key?: string, defaultValue: any = null) {\n\t\tconst rawKey: string = key || propName;\n\t\tlet storageKey: string;\n\t\t\n\t\tObject.defineProperty(prototype, propName, {\n\t\t\tget: function() {\n\t\t\t\tlet value: any;\n\t\t\t\tStrategyIndex.get(strategyName).get(getKey()).subscribe((result) => value = result);\n\t\t\t\treturn value === undefined ? defaultValue : value;\n\t\t\t},\n\t\t\tset: function(value) {\n\t\t\t\tStrategyIndex.get(strategyName).set(getKey(), value).subscribe(noop);\n\t\t\t}\n\t\t});\n\t\t\n\t\tfunction getKey() {\n\t\t\tif (storageKey !== undefined) return storageKey;\n\t\t\treturn storageKey = StorageKeyManager.normalize(rawKey);\n\t\t}\n\t}\n}\n\n","import {StorageStrategies} from './constants/strategy';\nimport {DecoratorBuilder} from './helpers/decoratorBuilder';\n\nexport function LocalStorage(key?: string, defaultValue?: any) {\n\treturn function(prototype, propName) {\n\t\tDecoratorBuilder.buildSyncStrategyDecorator(StorageStrategies.Local, prototype, propName, key, defaultValue);\n\t};\n}\n\nexport function SessionStorage(key?: string, defaultValue?: any) {\n\treturn function(prototype, propName) {\n\t\tDecoratorBuilder.buildSyncStrategyDecorator(StorageStrategies.Session, prototype, propName, key, defaultValue);\n\t};\n}\n","import {LocalStorageServiceProvider} from './localStorage';\nimport {Provider} from '@angular/core';\nimport {SessionStorageServiceProvider} from './sessionStorage';\n\nexport const Services: Provider[] = [\n\tLocalStorageServiceProvider,\n\tSessionStorageServiceProvider\n];\n","import {APP_INITIALIZER, Inject, InjectionToken, ModuleWithProviders, NgModule, Optional} from '@angular/core';\nimport {LocalStorageProvider, SessionStorageProvider} from './core/nativeStorage';\nimport {Services} from './services/index';\nimport {Strategies} from './strategies/index';\nimport {StrategyIndex} from './services/strategyIndex';\nimport {NgxWebstorageConfiguration} from './config';\nimport {StorageKeyManager} from './helpers/storageKeyManager';\n\nexport const LIB_CONFIG: InjectionToken<NgxWebstorageConfiguration> = new InjectionToken<NgxWebstorageConfiguration>('ngx_webstorage_config');\n\nexport function appInit(index: StrategyIndex) {\n\tindex.indexStrategies();\n\treturn () => StrategyIndex.index;\n}\n\n@NgModule({})\nexport class NgxWebstorageModule {\n\n\tconstructor(index: StrategyIndex, @Optional() @Inject(LIB_CONFIG) config: NgxWebstorageConfiguration) {\n\t\tif (config) StorageKeyManager.consumeConfiguration(config);\n\t\telse console.error('NgxWebstorage : Possible misconfiguration (The forRoot method usage is mandatory since the 3.0.0)');\n\t}\n\n\tstatic forRoot(config: NgxWebstorageConfiguration = {}): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: NgxWebstorageModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: LIB_CONFIG,\n\t\t\t\t\tuseValue: config,\n\t\t\t\t},\n\t\t\t\tLocalStorageProvider,\n\t\t\t\tSessionStorageProvider,\n\t\t\t\t...Services,\n\t\t\t\t...Strategies,\n\t\t\t\t{\n\t\t\t\t\tprovide: APP_INITIALIZER,\n\t\t\t\t\tuseFactory: appInit,\n\t\t\t\t\tdeps: [StrategyIndex],\n\t\t\t\t\tmulti: true\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t}\n\n}\n"],"names":["buildService"],"mappings":";;;;;;;;;;;IACC,OAAQ,gBAAgB;IACxB,SAAU,kBAAkB;IAC5B,UAAW,oBAAoB;;;;;;;ACDhC,MAAa,YAAY;;;;;IAExB,OAAO,kBAAkB,CAAC,OAAmB;;YACxC,SAAS,GAAG,IAAI;QACpB,IAAI;YACH,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;gBAChC,OAAO,CAAC,OAAO,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;gBAC1C,OAAO,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;aACnC;;gBACI,SAAS,GAAG,KAAK,CAAC;SACvB;QAAC,OAAM,CAAC,EAAE;YACV,SAAS,GAAG,KAAK,CAAC;SAClB;QACD,OAAO,SAAS,CAAC;KACjB;CAED;;;;;;;;;AClBD,SAAgB,IAAI,MAAK;;;;;;;ACAzB,MAAa,aAAa,GAAG,gBAAgB;;AAC7C,MAAa,gBAAgB,GAAG,GAAG;;AACnC,MAAa,sBAAsB,GAAG,KAAK;;;;;;ACF3C,MAGa,iBAAiB;;;;;IAM7B,OAAO,SAAS,CAAC,GAAW;QAC3B,GAAG,GAAG,iBAAiB,CAAC,eAAe,GAAG,GAAG,GAAG,GAAG,CAAC,WAAW,EAAE,CAAC;QAClE,OAAO,GAAG,iBAAiB,CAAC,MAAM,GAAG,iBAAiB,CAAC,SAAS,GAAG,GAAG,EAAE,CAAC;KACzE;;;;;IAED,OAAO,eAAe,CAAC,GAAW;QACjC,OAAO,GAAG,CAAC,OAAO,CAAC,iBAAiB,CAAC,MAAM,GAAG,iBAAiB,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;KACjF;;;;;IAED,OAAO,SAAS,CAAC,MAAc;QAC9B,iBAAiB,CAAC,MAAM,GAAG,MAAM,CAAC;KAClC;;;;;IAED,OAAO,YAAY,CAAC,SAAiB;QACpC,iBAAiB,CAAC,SAAS,GAAG,SAAS,CAAC;KACxC;;;;;IAED,OAAO,gBAAgB,CAAC,MAAe;QACtC,iBAAiB,CAAC,eAAe,GAAG,MAAM,CAAC;KAC3C;;;;;IAED,OAAO,oBAAoB,CAAC,MAAkC;QAC7D,IAAI,QAAQ,IAAI,MAAM;YAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACtD,IAAI,WAAW,IAAI,MAAM;YAAE,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QAC/D,IAAI,eAAe,IAAI,MAAM;YAAE,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;KAC3E;;AA7BM,wBAAM,GAAG,aAAa,CAAC;AACvB,2BAAS,GAAG,gBAAgB,CAAC;AAC7B,iCAAe,GAAG,sBAAsB,CAAC;;;;;;ACNjD,MAMa,WAAW;;;;IACvB,YAAsB,QAA8B;QAA9B,aAAQ,GAAR,QAAQ,CAAsB;KACnD;;;;;IAED,QAAQ,CAAC,GAAW;;YACf,KAAU;QACd,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,iBAAiB,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS;;;;QAAC,CAAC,MAAM,KAAK,KAAK,GAAG,OAAO,MAAM,KAAK,WAAW,GAAG,IAAI,GAAG,MAAM,EAAC,CAAC;QACjI,OAAO,KAAK,CAAC;KACb;;;;;;IAED,KAAK,CAAC,GAAW,EAAE,KAAU;QAC5B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,iBAAiB,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAC3E,OAAO,KAAK,CAAC;KACb;;;;;IAED,KAAK,CAAC,GAAY;QACjB,IAAI,GAAG,KAAK,SAAS;YACpB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,iBAAiB,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;;YAChE,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;KAC3C;;;;IAED,eAAe,KAAY,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;;;;;IAEvD,OAAO,CAAC,GAAW;QAClB,GAAG,GAAG,iBAAiB,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACvC,OAAO,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CACnC,MAAM;;;;QAAC,CAAC,OAAe,KAAK,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,GAAG,EAAC,EAChE,SAAS;;;QAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,EAAC,EACvC,oBAAoB,EAAE,EACtB,WAAW,EAAE,CACb,CAAC;KACF;CAED;;;;;;ACrCD,MAGa,YAAY;;;;IAExB,YAAsB,QAA8B;QAA9B,aAAQ,GAAR,QAAQ,CAAsB;KACnD;;;;;IAED,QAAQ,CAAC,GAAW;QACnB,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,iBAAiB,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAC9D,GAAG;;;;QAAC,CAAC,KAAU,KAAK,OAAO,KAAK,KAAK,WAAW,GAAG,IAAI,GAAG,KAAK,EAAC,CAChE,CAAC;KACF;;;;;;IAED,KAAK,CAAC,GAAW,EAAE,KAAU;QAC5B,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,iBAAiB,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;KAClE;;;;;IAED,KAAK,CAAC,GAAY;QACjB,OAAO,GAAG,KAAK,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,iBAAiB,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;KACvG;;;;IAED,eAAe,KAAa,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;;;;;IAExD,OAAO,CAAC,GAAW;QAClB,GAAG,GAAG,iBAAiB,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACvC,OAAO,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CACnC,MAAM;;;;QAAC,CAAC,OAAe,KAAK,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,GAAG,EAAC,EAChE,SAAS;;;QAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,EAAC,EACvC,oBAAoB,EAAE,EACtB,WAAW,EAAE,CACb,CAAC;KACF;CACD;;;;;;ACpCD,MAOa,oBAAoB;IADjC;QAGW,WAAM,GAAsC,EAAE,CAAC;KAsBzD;;;;;;IApBA,GAAG,CAAC,YAAoB,EAAE,GAAW;QACpC,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC;KAC7C;;;;;;;IAED,GAAG,CAAC,YAAoB,EAAE,GAAW,EAAE,KAAU;QAChD,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;KAC9C;;;;;;IAED,GAAG,CAAC,YAAoB,EAAE,GAAW;QACpC,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC;KAC7C;;;;;IAED,KAAK,CAAC,YAAoB;QACzB,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,sBAAG,EAAE,EAAiB,CAAC;KAChD;;;;;;IAES,aAAa,CAAC,YAAoB;QAC3C,IAAI,YAAY,IAAI,IAAI,CAAC,MAAM;YAAE,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QAClE,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,sBAAG,EAAE,EAAiB,CAAC;KACvD;;;YAxBD,UAAU,SAAC,EAAC,UAAU,EAAE,MAAM,EAAC;;;;;;;;ACNhC;AAGA,MAAa,aAAa,GAA+B,IAAI,cAAc,CAAa,sBAAsB,CAAC;;;;AAE/G,SAAgB,eAAe;IAC9B,OAAO,CAAC,OAAO,MAAM,KAAK,WAAW,IAAI,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC;CACpE;;AAED,MAAa,oBAAoB,GAAoB,EAAC,OAAO,EAAE,aAAa,EAAE,UAAU,EAAE,eAAe,EAAC;;AAE1G,MAAa,eAAe,GAA+B,IAAI,cAAc,CAAa,wBAAwB,CAAC;;;;AAEnH,SAAgB,iBAAiB;IAChC,OAAO,CAAC,OAAO,MAAM,KAAK,WAAW,IAAI,MAAM,CAAC,cAAc,GAAG,IAAI,CAAC;CACtE;;AAED,MAAa,sBAAsB,GAAoB,EAAC,OAAO,EAAE,eAAe,EAAE,UAAU,EAAE,iBAAiB,EAAC;;;;;;AChBhH;;;AAKA,MAAsB,uBAAuB;;;;;IAI5C,YAAsB,OAAmB,EAAY,KAA2B;QAA1D,YAAO,GAAP,OAAO,CAAY;QAAY,UAAK,GAAL,KAAK,CAAsB;QAHvE,eAAU,GAAoB,IAAI,OAAO,EAAE,CAAC;KAG+B;;;;IAIpF,IAAI,WAAW;QACd,IAAI,IAAI,CAAC,YAAY,KAAK,SAAS;YAAE,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACvG,OAAO,IAAI,CAAC,YAAY,CAAC;KACzB;;;;;IAED,GAAG,CAAC,GAAW;;YACV,IAAI,GAAQ,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC;QAC9C,IAAI,IAAI,KAAK,SAAS;YAAE,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;QAExC,IAAI;;kBACG,IAAI,GAAQ,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC;YAC3C,IAAI,IAAI,KAAK,IAAI,EAAE;gBAClB,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBACxB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;aACrC;SACD;QAAC,OAAM,GAAG,EAAE;YACZ,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAClB;QAED,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;KAChB;;;;;;IAED,GAAG,CAAC,GAAW,EAAE,KAAU;;cACpB,IAAI,GAAW,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;QAC1C,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QAChC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;QACtC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC1B,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC;KACjB;;;;;IAED,GAAG,CAAC,GAAW;QACd,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QAC7B,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QAC/B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC1B,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;KAChB;;;;IAED,KAAK;QACJ,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;QACrB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;KAChB;CAED;;;;;;AC1DD,MAQa,oBAAqB,SAAQ,uBAAuB;;;;;;;IAIhE,YAA6C,OAAmB,EAC1C,KAA2B,EACN,UAAe,EACpC,IAAY;QACjC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAJsB,YAAO,GAAP,OAAO,CAAY;QAC1C,UAAK,GAAL,KAAK,CAAsB;QACN,eAAU,GAAV,UAAU,CAAK;QACpC,SAAI,GAAJ,IAAI,CAAQ;QALzB,SAAI,GAAW,oBAAoB,CAAC,YAAY,CAAC;QAOzD,IAAI,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC;YAAE,IAAI,CAAC,qBAAqB,EAAE,CAAC;KACrE;;;;;IAES,qBAAqB;QAC9B,MAAM,CAAC,gBAAgB,CAAC,SAAS;;;;QAAE,CAAC,KAAmB,KAAK,IAAI,CAAC,IAAI,CAAC,GAAG;;;QAAC;YACzE,IAAI,KAAK,CAAC,WAAW,KAAK,IAAI,CAAC,OAAO;gBAAE,OAAO;;kBACzC,GAAG,GAAW,KAAK,CAAC,GAAG;YAC7B,IAAI,GAAG,KAAK,IAAI;gBAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;;gBAClD,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACjC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAC1B,EAAC,EAAC,CAAC;KACJ;;AAnBe,iCAAY,GAAW,iBAAiB,CAAC,KAAK,CAAC;;;4CAGlD,MAAM,SAAC,aAAa;YAZ1B,oBAAoB;4CAcd,MAAM,SAAC,WAAW;YAZhB,MAAM;;;;;;;ACFtB,MAQa,sBAAuB,SAAQ,uBAAuB;;;;;;;IAIlE,YAA+C,OAAmB,EAC5C,KAA2B,EACN,UAAe,EACpC,IAAY;QACjC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAJwB,YAAO,GAAP,OAAO,CAAY;QAC5C,UAAK,GAAL,KAAK,CAAsB;QACN,eAAU,GAAV,UAAU,CAAK;QACpC,SAAI,GAAJ,IAAI,CAAQ;QALzB,SAAI,GAAW,sBAAsB,CAAC,YAAY,CAAC;QAO3D,IAAI,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC;YAAE,IAAI,CAAC,qBAAqB,EAAE,CAAC;KACrE;;;;;IAES,qBAAqB;QAC9B,MAAM,CAAC,gBAAgB,CAAC,SAAS;;;;QAAE,CAAC,KAAmB,KAAK,IAAI,CAAC,IAAI,CAAC,GAAG;;;QAAC;YACzE,IAAI,KAAK,CAAC,WAAW,KAAK,IAAI,CAAC,OAAO;gBAAE,OAAO;;kBACzC,GAAG,GAAW,KAAK,CAAC,GAAG;YAC7B,IAAI,KAAK,CAAC,GAAG,KAAK,IAAI;gBAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;;gBACxD,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACjC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAC1B,EAAC,EAAC,CAAC;KACJ;;AAnBe,mCAAY,GAAW,iBAAiB,CAAC,OAAO,CAAC;;;4CAGpD,MAAM,SAAC,eAAe;YAZ5B,oBAAoB;4CAcd,MAAM,SAAC,WAAW;YAZhB,MAAM;;;;;;;ACDtB,MAKa,uBAAuB;;;;IAMnC,YAAoD,KAA2B;QAA3B,UAAK,GAAL,KAAK,CAAsB;QAJtE,eAAU,GAAoB,IAAI,OAAO,EAAE,CAAC;QACrD,gBAAW,GAAY,IAAI,CAAC;QACnB,SAAI,GAAW,uBAAuB,CAAC,YAAY,CAAC;KAEsB;;;;;IAEnF,GAAG,CAAC,GAAW;QACd,OAAO,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;KAC1C;;;;;;IAED,GAAG,CAAC,GAAW,EAAE,KAAU;QAC1B,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;QACtC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC1B,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC;KACjB;;;;;IAED,GAAG,CAAC,GAAW;QACd,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QAC/B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC1B,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;KAChB;;;;IAED,KAAK;QACJ,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;KAChB;;AA3Be,oCAAY,GAAW,iBAAiB,CAAC,QAAQ,CAAC;;;YAL3D,oBAAoB,uBAUd,MAAM,SAAC,oBAAoB;;;;;;;ACZzC;AAMA,MAAa,kBAAkB,GAAyC,IAAI,cAAc,CAAuB,oBAAoB,CAAC;;AAEtI,MAAa,UAAU,GAAe;IACrC,EAAC,OAAO,EAAE,kBAAkB,EAAE,QAAQ,EAAE,uBAAuB,EAAE,KAAK,EAAE,IAAI,EAAC;IAC7E,EAAC,OAAO,EAAE,kBAAkB,EAAE,QAAQ,EAAE,oBAAoB,EAAE,KAAK,EAAE,IAAI,EAAC;IAC1E,EAAC,OAAO,EAAE,kBAAkB,EAAE,QAAQ,EAAE,sBAAsB,EAAE,KAAK,EAAE,IAAI,EAAC;CAC5E;;;;;;ACZD;AAIA,MAAa,uBAAuB,GAAW,eAAe;AAE9D,MAAa,mBAAmB;;;;IAO/B,YAAwB,IAAa;QAL5B,eAAU,GAAoB,IAAI,OAAO,EAAE,CAAC;QAC9C,UAAK,GAAQ,EAAE,CAAC;QAChB,eAAU,GAAY,IAAI,CAAC;QAIjC,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,uBAAuB,CAAC;KAC5C;;;;IAED,IAAI,WAAW;QACd,OAAO,IAAI,CAAC,UAAU,CAAC;KACvB;;;;;IAED,GAAG,CAAC,GAAW;QACd,OAAO,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;KAC3B;;;;;;IAED,GAAG,CAAC,GAAW,EAAE,KAAU;QAC1B,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC1B,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC;KACjB;;;;;IAED,GAAG,CAAC,GAAW;QACd,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC1B,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;KAChB;;;;IAED,KAAK;QACJ,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;KAChB;;;;yCA5BY,QAAQ;;;;;;;ACXtB,MAAa,WAAW;IAAxB;QAGQ,UAAK,GAA4B,EAAE,CAAC;KA0B3C;;;;IAxBA,IAAI,MAAM;QACT,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC;KACtC;;;;IAED,KAAK;QACJ,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;KAChB;;;;;IAED,OAAO,CAAC,GAAW;QAClB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC;KAC/B;;;;;IAED,GAAG,CAAC,KAAa;QAChB,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC;KACtC;;;;;IAED,UAAU,CAAC,GAAW;QACrB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;KACvB;;;;;;IAED,OAAO,CAAC,GAAW,EAAE,KAAa;QACjC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;KACxB;CAED;;;;;;AC9BD;AAKA,MAAa,oBAAoB,GAAG,kBAAkB;AAGtD,MAAa,aAAa;;;;IAKzB,YAA8D,UAAkC;QAAlC,eAAU,GAAV,UAAU,CAAwB;QAFvF,kBAAa,GAAoB,IAAI,OAAO,EAAE,CAAC;QAGvD,IAAI,CAAC,UAAU;YAAE,UAAU,GAAG,EAAE,CAAC;QACjC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,OAAO,EAAE;aACpC,GAAG;;;;;;QAAC,CAAC,QAA8B,EAAE,KAAK,EAAE,GAAG,KAAK,QAAQ,CAAC,IAAI,EAAC;aAClE,GAAG;;;;;;QAAC,CAAC,IAAY,EAAE,KAAK,EAAE,GAAG,KAAK,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,KAAK,GAAG,KAAK,GAAG,IAAI,EAAC;aAC7E,MAAM;;;;QAAC,CAAC,KAAa,KAAK,KAAK,KAAK,IAAI,EAAC;aACzC,GAAG;;;;QAAC,CAAC,KAAa,KAAK,UAAU,CAAC,KAAK,CAAC,EAAC,CAAC;KAC5C;;;;;IAED,OAAO,GAAG,CAAC,IAAY;QACtB,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC;YAAE,MAAM,KAAK,CAAC,oBAAoB,CAAC,CAAC;;YACpE,QAAQ,GAAyB,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC;QAC9D,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE;YAC1B,QAAQ,GAAG,aAAa,CAAC,KAAK,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;SAC3D;QACD,OAAO,QAAQ,CAAC;KAChB;;;;;;IAED,OAAO,GAAG,CAAC,IAAY,EAAE,QAAQ;QAChC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC;KACrC;;;;;IAED,OAAO,KAAK,CAAC,IAAa;QACzB,IAAI,IAAI,KAAK,SAAS;YAAE,OAAO,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;;YACpD,aAAa,CAAC,KAAK,GAAG,EAAE,CAAC;KAC9B;;;;;IAED,OAAO,oBAAoB,CAAC,IAAY;QACvC,OAAO,IAAI,IAAI,aAAa,CAAC,KAAK,CAAC;KACnC;;;;IAED,OAAO,sBAAsB;QAC5B,OAAO,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;KACnD;;;;;IAEM,WAAW,CAAC,IAAY;QAC9B,OAAO,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;KAC/B;;;;IAEM,eAAe;QACrB,IAAI,CAAC,UAAU,CAAC,OAAO;;;;QAAC,CAAC,QAA8B,KAAK,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,EAAC,CAAC;KACpG;;;;;;IAEM,aAAa,CAAC,IAAY,EAAE,mBAA4B,KAAK;QACnE,IAAI,aAAa,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB;YAAE,OAAO,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;;cAC5F,QAAQ,GAAyB,IAAI,CAAC,UAAU,CAAC,IAAI;;;;QAAC,CAAC,QAA8B,KAAK,QAAQ,CAAC,IAAI,KAAK,IAAI,EAAC;QACvH,IAAI,CAAC,QAAQ;YAAE,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;QACrD,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,QAAQ,EAAE,gBAAgB,CAAC,CAAC;QAChD,OAAO,QAAQ,CAAC;KAChB;;;;;;;IAEM,QAAQ,CAAC,IAAY,EAAE,QAA8B,EAAE,mBAA4B,KAAK;QAC9F,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,gBAAgB,EAAE;YAClE,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;YAClC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC9B;KACD;;AA3DM,mBAAK,GAA6C,EAAE,CAAC;;YAH5D,UAAU,SAAC,EAAC,UAAU,EAAE,MAAM,EAAC;;;;wCAMlB,QAAQ,YAAI,MAAM,SAAC,kBAAkB;;;;;;;;ACbnD,MAKa,mBAAoB,SAAQ,WAAW;CAAG;;;;;AAEvD,SAAgB,YAAY,CAAC,KAAoB;;UAC1C,QAAQ,GAAyB,KAAK,CAAC,aAAa,CAAC,iBAAiB,CAAC,KAAK,CAAC;IACnF,OAAO,IAAI,WAAW,CAAC,QAAQ,CAAC,CAAC;CACjC;;AAED,MAAa,2BAA2B,GAAoB;IAC3D,OAAO,EAAE,mBAAmB;IAC5B,UAAU,EAAE,YAAY;IACxB,IAAI,EAAE,CAAC,aAAa,CAAC;CACrB;;;;;;AChBD,MAKa,qBAAsB,SAAQ,WAAW;CAAG;;;;;AAEzD,SAAgBA,cAAY,CAAC,KAAoB;;UAC1C,QAAQ,GAAyB,KAAK,CAAC,aAAa,CAAC,iBAAiB,CAAC,OAAO,CAAC;IACrF,OAAO,IAAI,WAAW,CAAC,QAAQ,CAAC,CAAC;CACjC;;AAED,MAAa,6BAA6B,GAAoB;IAC7D,OAAO,EAAE,qBAAqB;IAC9B,UAAU,EAAEA,cAAY;IACxB,IAAI,EAAE,CAAC,aAAa,CAAC;CACrB;;;;;;;;;;;ACjBD,MAKa,gBAAgB;;;;;;;;;IAE5B,OAAO,0BAA0B,CAAC,YAAwC,EAAE,SAAS,EAAE,QAAgB,EAAE,GAAY,EAAE,eAAoB,IAAI;;cACxI,MAAM,GAAW,GAAG,IAAI,QAAQ;;YAClC,UAAkB;QAEtB,MAAM,CAAC,cAAc,CAAC,SAAS,EAAE,QAAQ,EAAE;YAC1C,GAAG;;;YAAE;;oBACA,KAAU;gBACd,aAAa,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,SAAS;;;;gBAAC,CAAC,MAAM,KAAK,KAAK,GAAG,MAAM,EAAC,CAAC;gBACpF,OAAO,KAAK,KAAK,SAAS,GAAG,YAAY,GAAG,KAAK,CAAC;aAClD,CAAA;YACD,GAAG;;;;YAAE,UAAS,KAAK;gBAClB,aAAa,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,KAAK,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;aACrE,CAAA;SACD,CAAC,CAAC;;;;QAEH,SAAS,MAAM;YACd,IAAI,UAAU,KAAK,SAAS;gBAAE,OAAO,UAAU,CAAC;YAChD,OAAO,UAAU,GAAG,iBAAiB,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;SACxD;KACD;CACD;;;;;;AC3BD;;;;;AAGA,SAAgB,YAAY,CAAC,GAAY,EAAE,YAAkB;IAC5D;;;;;IAAO,UAAS,SAAS,EAAE,QAAQ;QAClC,gBAAgB,CAAC,0BAA0B,CAAC,iBAAiB,CAAC,KAAK,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,EAAE,YAAY,CAAC,CAAC;KAC7G,EAAC;CACF;;;;;;AAED,SAAgB,cAAc,CAAC,GAAY,EAAE,YAAkB;IAC9D;;;;;IAAO,UAAS,SAAS,EAAE,QAAQ;QAClC,gBAAgB,CAAC,0BAA0B,CAAC,iBAAiB,CAAC,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,EAAE,YAAY,CAAC,CAAC;KAC/G,EAAC;CACF;;;;;;ACbD;AAIA,MAAa,QAAQ,GAAe;IACnC,2BAA2B;IAC3B,6BAA6B;CAC7B;;;;;;ACPD;AAQA,MAAa,UAAU,GAA+C,IAAI,cAAc,CAA6B,uBAAuB,CAAC;;;;;AAE7I,SAAgB,OAAO,CAAC,KAAoB;IAC3C,KAAK,CAAC,eAAe,EAAE,CAAC;IACxB;;;IAAO,MAAM,aAAa,CAAC,KAAK,EAAC;CACjC;AAGD,MAAa,mBAAmB;;;;;IAE/B,YAAY,KAAoB,EAAkC,MAAkC;QACnG,IAAI,MAAM;YAAE,iBAAiB,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;;YACtD,OAAO,CAAC,KAAK,CAAC,mGAAmG,CAAC,CAAC;KACxH;;;;;IAED,OAAO,OAAO,CAAC,SAAqC,EAAE;QACrD,OAAO;YACN,QAAQ,EAAE,mBAAmB;YAC7B,SAAS,EAAE;gBACV;oBACC,OAAO,EAAE,UAAU;oBACnB,QAAQ,EAAE,MAAM;iBAChB;gBACD,oBAAoB;gBACpB,sBAAsB;gBACtB,GAAG,QAAQ;gBACX,GAAG,UAAU;gBACb;oBACC,OAAO,EAAE,eAAe;oBACxB,UAAU,EAAE,OAAO;oBACnB,IAAI,EAAE,CAAC,aAAa,CAAC;oBACrB,KAAK,EAAE,IAAI;iBACX;aACD;SACD,CAAC;KACF;;;YA5BD,QAAQ,SAAC,EAAE;;;;YAXJ,aAAa;4CAce,QAAQ,YAAI,MAAM,SAAC,UAAU;;;;;;;;;;;;;;;"}