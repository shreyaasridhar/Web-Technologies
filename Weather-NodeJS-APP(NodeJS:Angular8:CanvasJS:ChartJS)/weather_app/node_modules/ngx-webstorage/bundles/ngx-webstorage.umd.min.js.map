{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-webstorage/lib/constants/strategy.ts","ng://ngx-webstorage/lib/helpers/compat.ts","ng://ngx-webstorage/lib/helpers/noop.ts","ng://ngx-webstorage/lib/constants/config.ts","ng://ngx-webstorage/lib/helpers/storageKeyManager.ts","ng://ngx-webstorage/lib/core/templates/syncStorage.ts","ng://ngx-webstorage/lib/core/templates/asyncStorage.ts","ng://ngx-webstorage/lib/core/strategyCache.ts","ng://ngx-webstorage/lib/core/nativeStorage.ts","ng://ngx-webstorage/lib/strategies/baseSyncStorage.ts","ng://ngx-webstorage/lib/strategies/localStorage.ts","ng://ngx-webstorage/lib/strategies/sessionStorage.ts","ng://ngx-webstorage/lib/strategies/inMemory.ts","ng://ngx-webstorage/lib/strategies/index.ts","ng://ngx-webstorage/stubs/storageStrategy.stub.ts","ng://ngx-webstorage/stubs/storage.stub.ts","ng://ngx-webstorage/lib/services/strategyIndex.ts","ng://ngx-webstorage/lib/services/localStorage.ts","ng://ngx-webstorage/lib/services/sessionStorage.ts","ng://ngx-webstorage/lib/helpers/decoratorBuilder.ts","ng://ngx-webstorage/lib/services/index.ts","ng://ngx-webstorage/lib/module.ts","ng://ngx-webstorage/lib/decorators.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","Local","Session","InMemory","CompatHelper","isStorageAvailable","storage","available","setItem","removeItem","noop","StorageKeyManager","normalize","raw","isCaseSensitive","toLowerCase","prefix","separator","isNormalizedKey","key","indexOf","setPrefix","setSeparator","setCaseSensitive","enable","consumeConfiguration","config","caseSensitive","SyncStorage","strategy","retrieve","get","subscribe","result","store","set","clear","undefined","del","getStrategyName","name","observe","_this","keyChanges","pipe","filter","changed","switchMap","distinctUntilChanged","shareReplay","AsyncStorage","map","StrategyCacheService","caches","strategyName","getCacheStore","Injectable","args","providedIn","LOCAL_STORAGE","InjectionToken","getLocalStorage","window","localStorage","LocalStorageProvider","provide","useFactory","SESSION_STORAGE","getSessionStorage","sessionStorage","SessionStorageProvider","BaseSyncStorageStrategy","cache","Subject","defineProperty","_isAvailable","data","of","item","getItem","JSON","parse","err","console","warn","stringify","LocalStorageStrategy","platformId","zone","_super","isPlatformBrowser","listenExternalChanges","tslib_1.__extends","addEventListener","event","run","storageArea","StorageStrategies","Inject","PLATFORM_ID","NgZone","SessionStorageStrategy","InMemoryStorageStrategy","isAvailable","decorators","type","STORAGE_STRATEGIES","Strategies","useClass","multi","StorageStrategyStubName","StorageStrategyStub","_available","Optional","StorageStub","keys","index","StrategyIndex","strategies","registration$","reverse","arr","isStrategyRegistered","Error","hasRegistredStrategies","getStrategy","indexStrategies","forEach","register","indexStrategy","overrideIfExists","find","LocalStorageService","buildService","LocalStorageServiceProvider","deps","SessionStorageService","SessionStorageServiceProvider","DecoratorBuilder","buildSyncStrategyDecorator","propName","defaultValue","storageKey","rawKey","getKey","Services","LIB_CONFIG","appInit","NgxWebstorageModule","forRoot","ngModule","providers","useValue","APP_INITIALIZER","NgModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export enum StorageStrategies {\n\tLocal = 'local_strategy',\n\tSession = 'session_strategy',\n\tInMemory = 'in_memory_strategy'\n}\n","import {WebStorage} from '../core/interfaces/webStorage';\n\nexport class CompatHelper {\n\n\tstatic isStorageAvailable(storage: WebStorage): boolean {\n\t\tlet available = true;\n\t\ttry {\n\t\t\tif (typeof storage === 'object') {\n\t\t\t\tstorage.setItem('test-storage', 'foobar');\n\t\t\t\tstorage.removeItem('test-storage');\n\t\t\t}\n\t\t\telse available = false;\n\t\t} catch(e) {\n\t\t\tavailable = false;\n\t\t}\n\t\treturn available;\n\t}\n\n}\n\n","export function noop() {}\n","export const DefaultPrefix = 'ngx-webstorage';\nexport const DefaultSeparator = '|';\nexport const DefaultIsCaseSensitive = false;\n","import {DefaultIsCaseSensitive, DefaultPrefix, DefaultSeparator} from '../constants/config';\nimport {NgxWebstorageConfiguration} from '../config';\n\nexport class StorageKeyManager {\n\t\n\tstatic prefix = DefaultPrefix;\n\tstatic separator = DefaultSeparator;\n\tstatic isCaseSensitive = DefaultIsCaseSensitive;\n\t\n\tstatic normalize(raw: string) {\n\t\traw = StorageKeyManager.isCaseSensitive ? raw : raw.toLowerCase();\n\t\treturn `${StorageKeyManager.prefix}${StorageKeyManager.separator}${raw}`;\n\t}\n\t\n\tstatic isNormalizedKey(key: string) {\n\t\treturn key.indexOf(StorageKeyManager.prefix + StorageKeyManager.separator) === 0;\n\t}\n\t\n\tstatic setPrefix(prefix: string) {\n\t\tStorageKeyManager.prefix = prefix;\n\t}\n\t\n\tstatic setSeparator(separator: string) {\n\t\tStorageKeyManager.separator = separator;\n\t}\n\t\n\tstatic setCaseSensitive(enable: boolean) {\n\t\tStorageKeyManager.isCaseSensitive = enable;\n\t}\n\t\n\tstatic consumeConfiguration(config: NgxWebstorageConfiguration) {\n\t\tif ('prefix' in config) this.setPrefix(config.prefix);\n\t\tif ('separator' in config) this.setSeparator(config.separator);\n\t\tif ('caseSensitive' in config) this.setCaseSensitive(config.caseSensitive);\n\t}\n}\n","import {StorageStrategy} from '../interfaces/storageStrategy';\nimport {noop} from '../../helpers/noop';\nimport {StorageService} from '../interfaces/storageService';\nimport {StorageKeyManager} from '../../helpers/storageKeyManager';\nimport {Observable} from 'rxjs';\nimport {distinctUntilChanged, filter, shareReplay, switchMap} from 'rxjs/operators';\n\nexport class SyncStorage implements StorageService {\n\tconstructor(protected strategy: StorageStrategy<any>) {\n\t}\n\n\tretrieve(key: string): any {\n\t\tlet value: any;\n\t\tthis.strategy.get(StorageKeyManager.normalize(key)).subscribe((result) => value = typeof result === 'undefined' ? null : result);\n\t\treturn value;\n\t}\n\n\tstore(key: string, value: any): any {\n\t\tthis.strategy.set(StorageKeyManager.normalize(key), value).subscribe(noop);\n\t\treturn value;\n\t}\n\n\tclear(key?: string): void {\n\t\tif (key !== undefined)\n\t\t\tthis.strategy.del(StorageKeyManager.normalize(key)).subscribe(noop);\n\t\telse this.strategy.clear().subscribe(noop);\n\t}\n\n\tgetStrategyName(): string {return this.strategy.name; }\n\n\tobserve(key: string): Observable<any> {\n\t\tkey = StorageKeyManager.normalize(key);\n\t\treturn this.strategy.keyChanges.pipe(\n\t\t\tfilter((changed: string) => changed === null || changed === key),\n\t\t\tswitchMap(() => this.strategy.get(key)),\n\t\t\tdistinctUntilChanged(),\n\t\t\tshareReplay()\n\t\t);\n\t}\n\n}\n","import {StorageStrategy} from '../interfaces/storageStrategy';\nimport {Observable} from 'rxjs';\nimport {StorageService} from '../interfaces/storageService';\nimport {StorageKeyManager} from '../../helpers/storageKeyManager';\nimport {distinctUntilChanged, filter, map, shareReplay, switchMap} from 'rxjs/operators';\n\nexport class AsyncStorage implements StorageService {\n\n\tconstructor(protected strategy: StorageStrategy<any>) {\n\t}\n\n\tretrieve(key: string): Observable<any> {\n\t\treturn this.strategy.get(StorageKeyManager.normalize(key)).pipe(\n\t\t\tmap((value: any) => typeof value === 'undefined' ? null : value)\n\t\t);\n\t}\n\n\tstore(key: string, value: any): Observable<any> {\n\t\treturn this.strategy.set(StorageKeyManager.normalize(key), value);\n\t}\n\n\tclear(key?: string): Observable<void> {\n\t\treturn key !== undefined ? this.strategy.del(StorageKeyManager.normalize(key)) : this.strategy.clear();\n\t}\n\n\tgetStrategyName(): string { return this.strategy.name; }\n\n\tobserve(key: string): Observable<any> {\n\t\tkey = StorageKeyManager.normalize(key);\n\t\treturn this.strategy.keyChanges.pipe(\n\t\t\tfilter((changed: string) => changed === null || changed === key),\n\t\t\tswitchMap(() => this.strategy.get(key)),\n\t\t\tdistinctUntilChanged(),\n\t\t\tshareReplay()\n\t\t);\n\t}\n}\n","import {Injectable} from '@angular/core';\n\nexport interface StrategyCache {\n\t[key: string]: any;\n}\n\n@Injectable({providedIn: 'root'})\nexport class StrategyCacheService {\n\n\tprotected caches: { [name: string]: StrategyCache } = {};\n\n\tget(strategyName: string, key: string) {\n\t\treturn this.getCacheStore(strategyName)[key];\n\t}\n\n\tset(strategyName: string, key: string, value: any) {\n\t\tthis.getCacheStore(strategyName)[key] = value;\n\t}\n\n\tdel(strategyName: string, key: string) {\n\t\tdelete this.getCacheStore(strategyName)[key];\n\t}\n\n\tclear(strategyName: string) {\n\t\tthis.caches[strategyName] = {} as StrategyCache;\n\t}\n\n\tprotected getCacheStore(strategyName: string): StrategyCache {\n\t\tif (strategyName in this.caches) return this.caches[strategyName];\n\t\treturn this.caches[strategyName] = {} as StrategyCache;\n\t}\n}\n","import {FactoryProvider, InjectionToken} from '@angular/core';\nimport {WebStorage} from './interfaces/webStorage';\n\nexport const LOCAL_STORAGE: InjectionToken<WebStorage> = new InjectionToken<WebStorage>('window_local_storage');\n\nexport function getLocalStorage() {\n\treturn (typeof window !== 'undefined') ? window.localStorage : null;\n}\n\nexport const LocalStorageProvider: FactoryProvider = {provide: LOCAL_STORAGE, useFactory: getLocalStorage};\n\nexport const SESSION_STORAGE: InjectionToken<WebStorage> = new InjectionToken<WebStorage>('window_session_storage');\n\nexport function getSessionStorage() {\n\treturn (typeof window !== 'undefined') ? window.sessionStorage : null;\n}\n\nexport const SessionStorageProvider: FactoryProvider = {provide: SESSION_STORAGE, useFactory: getSessionStorage};\n","import {StorageStrategy} from '../core/interfaces/storageStrategy';\nimport {Observable, of, Subject} from 'rxjs';\nimport {StrategyCacheService} from '../core/strategyCache';\nimport {CompatHelper} from '../helpers/compat';\nimport {WebStorage} from '../core/interfaces/webStorage';\n\nexport abstract class BaseSyncStorageStrategy implements StorageStrategy<any> {\n\treadonly keyChanges: Subject<string> = new Subject();\n\tabstract readonly name: string;\n\n\tconstructor(protected storage: WebStorage, protected cache: StrategyCacheService) {}\n\n\tprotected _isAvailable: boolean;\n\n\tget isAvailable(): boolean {\n\t\tif (this._isAvailable === undefined) this._isAvailable = CompatHelper.isStorageAvailable(this.storage);\n\t\treturn this._isAvailable;\n\t}\n\t\n\tget(key: string): Observable<any> {\n\t\tlet data: any = this.cache.get(this.name, key);\n\t\tif (data !== undefined) return of(data);\n\n\t\ttry {\n\t\t\tconst item: any = this.storage.getItem(key);\n\t\t\tif (item !== null) {\n\t\t\t\tdata = JSON.parse(item);\n\t\t\t\tthis.cache.set(this.name, key, data);\n\t\t\t}\n\t\t} catch(err) {\n\t\t\tconsole.warn(err);\n\t\t}\n\n\t\treturn of(data);\n\t}\n\n\tset(key: string, value: any): Observable<any> {\n\t\tconst data: string = JSON.stringify(value);\n\t\tthis.storage.setItem(key, data);\n\t\tthis.cache.set(this.name, key, value);\n\t\tthis.keyChanges.next(key);\n\t\treturn of(value);\n\t}\n\n\tdel(key: string): Observable<void> {\n\t\tthis.storage.removeItem(key);\n\t\tthis.cache.del(this.name, key);\n\t\tthis.keyChanges.next(key);\n\t\treturn of(null);\n\t}\n\n\tclear(): Observable<void> {\n\t\tthis.storage.clear();\n\t\tthis.cache.clear(this.name);\n\t\tthis.keyChanges.next(null);\n\t\treturn of(null);\n\t}\n\n}\n","import {StrategyCacheService} from '../core/strategyCache';\nimport {BaseSyncStorageStrategy} from './baseSyncStorage';\nimport {Inject, NgZone, PLATFORM_ID} from '@angular/core';\nimport {LOCAL_STORAGE} from '../core/nativeStorage';\nimport {StorageStrategies} from '../constants/strategy';\nimport {isPlatformBrowser} from '@angular/common';\nimport {WebStorage} from '../core/interfaces/webStorage';\n\nexport class LocalStorageStrategy extends BaseSyncStorageStrategy {\n\tstatic readonly strategyName: string = StorageStrategies.Local;\n\treadonly name: string = LocalStorageStrategy.strategyName;\n\n\tconstructor(@Inject(LOCAL_STORAGE) protected storage: WebStorage,\n\t            protected cache: StrategyCacheService,\n\t            @Inject(PLATFORM_ID) protected platformId: any,\n\t            protected zone: NgZone) {\n\t\tsuper(storage, cache);\n\t\tif (isPlatformBrowser(this.platformId)) this.listenExternalChanges();\n\t}\n\n\tprotected listenExternalChanges() {\n\t\twindow.addEventListener('storage', (event: StorageEvent) => this.zone.run(() => {\n\t\t\tif (event.storageArea !== this.storage) return;\n\t\t\tconst key: string = event.key;\n\t\t\tif (key !== null) this.cache.del(this.name, event.key);\n\t\t\telse this.cache.clear(this.name);\n\t\t\tthis.keyChanges.next(key);\n\t\t}));\n\t}\n\n}\n","import {StrategyCacheService} from '../core/strategyCache';\nimport {BaseSyncStorageStrategy} from './baseSyncStorage';\nimport {Inject, NgZone, PLATFORM_ID} from '@angular/core';\nimport {SESSION_STORAGE} from '../core/nativeStorage';\nimport {StorageStrategies} from '../constants/strategy';\nimport {isPlatformBrowser} from '@angular/common';\nimport {WebStorage} from '../core/interfaces/webStorage';\n\nexport class SessionStorageStrategy extends BaseSyncStorageStrategy {\n\tstatic readonly strategyName: string = StorageStrategies.Session;\n\treadonly name: string = SessionStorageStrategy.strategyName;\n\n\tconstructor(@Inject(SESSION_STORAGE) protected storage: WebStorage,\n\t            protected cache: StrategyCacheService,\n\t            @Inject(PLATFORM_ID) protected platformId: any,\n\t            protected zone: NgZone) {\n\t\tsuper(storage, cache);\n\t\tif (isPlatformBrowser(this.platformId)) this.listenExternalChanges();\n\t}\n\n\tprotected listenExternalChanges() {\n\t\twindow.addEventListener('storage', (event: StorageEvent) => this.zone.run(() => {\n\t\t\tif (event.storageArea !== this.storage) return;\n\t\t\tconst key: string = event.key;\n\t\t\tif (event.key !== null) this.cache.del(this.name, event.key);\n\t\t\telse this.cache.clear(this.name);\n\t\t\tthis.keyChanges.next(key);\n\t\t}));\n\t}\n\n}\n","import {StorageStrategy} from '../core/interfaces/storageStrategy';\nimport {Observable, of, Subject} from 'rxjs';\nimport {StrategyCacheService} from '../core/strategyCache';\nimport {StorageStrategies} from '../constants/strategy';\nimport {Inject} from '@angular/core';\n\nexport class InMemoryStorageStrategy implements StorageStrategy<any> {\n\tstatic readonly strategyName: string = StorageStrategies.InMemory;\n\treadonly keyChanges: Subject<string> = new Subject();\n\tisAvailable: boolean = true;\n\treadonly name: string = InMemoryStorageStrategy.strategyName;\n\n\tconstructor(@Inject(StrategyCacheService) protected cache: StrategyCacheService) {}\n\n\tget(key: string): Observable<any> {\n\t\treturn of(this.cache.get(this.name, key));\n\t}\n\n\tset(key: string, value: any): Observable<any> {\n\t\tthis.cache.set(this.name, key, value);\n\t\tthis.keyChanges.next(key);\n\t\treturn of(value);\n\t}\n\n\tdel(key: string): Observable<void> {\n\t\tthis.cache.del(this.name, key);\n\t\tthis.keyChanges.next(key);\n\t\treturn of(null);\n\t}\n\n\tclear(): Observable<void> {\n\t\tthis.cache.clear(this.name);\n\t\tthis.keyChanges.next(null);\n\t\treturn of(null);\n\t}\n\n}\n","import {InjectionToken, Provider} from '@angular/core';\nimport {StorageStrategy} from '../core/interfaces/storageStrategy';\nimport {LocalStorageStrategy} from './localStorage';\nimport {SessionStorageStrategy} from './sessionStorage';\nimport {InMemoryStorageStrategy} from './inMemory';\n\nexport const STORAGE_STRATEGIES: InjectionToken<StorageStrategy<any>> = new InjectionToken<StorageStrategy<any>>('STORAGE_STRATEGIES');\n\nexport const Strategies: Provider[] = [\n\t{provide: STORAGE_STRATEGIES, useClass: InMemoryStorageStrategy, multi: true},\n\t{provide: STORAGE_STRATEGIES, useClass: LocalStorageStrategy, multi: true},\n\t{provide: STORAGE_STRATEGIES, useClass: SessionStorageStrategy, multi: true},\n];\n","import {Observable, of, Subject} from 'rxjs';\nimport {StorageStrategy} from '../lib/core/interfaces/storageStrategy';\nimport {Optional} from '@angular/core';\n\nexport const StorageStrategyStubName: string = 'stub_strategy';\n\nexport class StorageStrategyStub implements StorageStrategy<any> {\n\n\treadonly keyChanges: Subject<string> = new Subject();\n\tpublic store: any = {};\n\tpublic _available: boolean = true;\n\treadonly name: string;\n\n\tconstructor(@Optional() name?: string) {\n\t\tthis.name = name || StorageStrategyStubName;\n\t}\n\n\tget isAvailable(): boolean {\n\t\treturn this._available;\n\t}\n\n\tget(key: string): Observable<any> {\n\t\treturn of(this.store[key]);\n\t}\n\n\tset(key: string, value: any): Observable<any> {\n\t\tthis.store[key] = value;\n\t\tthis.keyChanges.next(key);\n\t\treturn of(value);\n\t}\n\n\tdel(key: string): Observable<void> {\n\t\tdelete this.store[key];\n\t\tthis.keyChanges.next(key);\n\t\treturn of(null);\n\t}\n\n\tclear(): Observable<void> {\n\t\tthis.store = {};\n\t\tthis.keyChanges.next(null);\n\t\treturn of(null);\n\t}\n\n}\n","import {WebStorage} from '../lib/core/interfaces/webStorage';\n\nexport class StorageStub implements WebStorage {\n\t[name: string]: any;\n\n\tpublic store: { [prop: string]: any } = {};\n\n\tget length(): number {\n\t\treturn Object.keys(this.store).length;\n\t}\n\n\tclear(): void {\n\t\tthis.store = {};\n\t}\n\n\tgetItem(key: string): string | null {\n\t\treturn this.store[key] || null;\n\t}\n\n\tkey(index: number): string | null {\n\t\treturn Object.keys(this.store)[index];\n\t}\n\n\tremoveItem(key: string): void {\n\t\tdelete this.store[key];\n\t}\n\n\tsetItem(key: string, value: string): void {\n\t\tthis.store[key] = value;\n\t}\n\n}\n","import {StorageStrategy} from '../core/interfaces/storageStrategy';\nimport {Subject} from 'rxjs';\nimport {Inject, Injectable, Optional} from '@angular/core';\nimport {STORAGE_STRATEGIES} from '../strategies';\nimport {StorageStrategies} from '../constants/strategy';\n\nexport const InvalidStrategyError = 'invalid_strategy';\n\n@Injectable({providedIn: 'root'})\nexport class StrategyIndex {\n\n\tstatic index: { [name: string]: StorageStrategy<any> } = {};\n\treadonly registration$: Subject<string> = new Subject();\n\n\tconstructor(@Optional() @Inject(STORAGE_STRATEGIES) protected strategies: StorageStrategy<any>[]) {\n\t\tif (!strategies) strategies = [];\n\t\tthis.strategies = strategies.reverse()\n\t\t\t.map((strategy: StorageStrategy<any>, index, arr) => strategy.name)\n\t\t\t.map((name: string, index, arr) => arr.indexOf(name) === index ? index : null)\n\t\t\t.filter((index: number) => index !== null)\n\t\t\t.map((index: number) => strategies[index]);\n\t}\n\n\tstatic get(name: string): StorageStrategy<any> {\n\t\tif (!this.isStrategyRegistered(name)) throw Error(InvalidStrategyError);\n\t\tlet strategy: StorageStrategy<any> = StrategyIndex.index[name];\n\t\tif (!strategy.isAvailable) {\n\t\t\tstrategy = StrategyIndex.index[StorageStrategies.InMemory];\n\t\t}\n\t\treturn strategy;\n\t}\n\n\tstatic set(name: string, strategy): void {\n\t\tStrategyIndex.index[name] = strategy;\n\t}\n\n\tstatic clear(name?: string): void {\n\t\tif (name !== undefined) delete StrategyIndex.index[name];\n\t\telse StrategyIndex.index = {};\n\t}\n\n\tstatic isStrategyRegistered(name: string): boolean {\n\t\treturn name in StrategyIndex.index;\n\t}\n\n\tstatic hasRegistredStrategies(): boolean {\n\t\treturn Object.keys(StrategyIndex.index).length > 0;\n\t}\n\n\tpublic getStrategy(name: string): StorageStrategy<any> {\n\t\treturn StrategyIndex.get(name);\n\t}\n\n\tpublic indexStrategies() {\n\t\tthis.strategies.forEach((strategy: StorageStrategy<any>) => this.register(strategy.name, strategy));\n\t}\n\n\tpublic indexStrategy(name: string, overrideIfExists: boolean = false): StorageStrategy<any> {\n\t\tif (StrategyIndex.isStrategyRegistered(name) && !overrideIfExists) return StrategyIndex.get(name);\n\t\tconst strategy: StorageStrategy<any> = this.strategies.find((strategy: StorageStrategy<any>) => strategy.name === name);\n\t\tif (!strategy) throw new Error(InvalidStrategyError);\n\t\tthis.register(name, strategy, overrideIfExists);\n\t\treturn strategy;\n\t}\n\n\tpublic register(name: string, strategy: StorageStrategy<any>, overrideIfExists: boolean = false) {\n\t\tif (!StrategyIndex.isStrategyRegistered(name) || overrideIfExists) {\n\t\t\tStrategyIndex.set(name, strategy);\n\t\t\tthis.registration$.next(name);\n\t\t}\n\t}\n\n}\n\n","import {FactoryProvider} from '@angular/core';\nimport {SyncStorage} from '../core/templates/syncStorage';\nimport {StrategyIndex} from './strategyIndex';\nimport {StorageStrategy} from '../core/interfaces/storageStrategy';\nimport {StorageStrategies} from '../constants/strategy';\n\nexport class LocalStorageService extends SyncStorage {}\n\nexport function buildService(index: StrategyIndex) {\n\tconst strategy: StorageStrategy<any> = index.indexStrategy(StorageStrategies.Local);\n\treturn new SyncStorage(strategy);\n}\n\nexport const LocalStorageServiceProvider: FactoryProvider = {\n\tprovide: LocalStorageService,\n\tuseFactory: buildService,\n\tdeps: [StrategyIndex]\n};\n","import {FactoryProvider} from '@angular/core';\nimport {SyncStorage} from '../core/templates/syncStorage';\nimport {StrategyIndex} from './strategyIndex';\nimport {StorageStrategy} from '../core/interfaces/storageStrategy';\nimport {StorageStrategies} from '../constants/strategy';\n\nexport class SessionStorageService extends SyncStorage {}\n\nexport function buildService(index: StrategyIndex) {\n\tconst strategy: StorageStrategy<any> = index.indexStrategy(StorageStrategies.Session);\n\treturn new SyncStorage(strategy);\n}\n\nexport const SessionStorageServiceProvider: FactoryProvider = {\n\tprovide: SessionStorageService,\n\tuseFactory: buildService,\n\tdeps: [StrategyIndex]\n};\n","import {StrategyIndex} from '../services/strategyIndex';\nimport {StorageStrategies} from '../constants/strategy';\nimport {StorageKeyManager} from './storageKeyManager';\nimport {noop} from './noop';\n\nexport class DecoratorBuilder {\n\t\n\tstatic buildSyncStrategyDecorator(strategyName: string | StorageStrategies, prototype, propName: string, key?: string, defaultValue: any = null) {\n\t\tconst rawKey: string = key || propName;\n\t\tlet storageKey: string;\n\t\t\n\t\tObject.defineProperty(prototype, propName, {\n\t\t\tget: function() {\n\t\t\t\tlet value: any;\n\t\t\t\tStrategyIndex.get(strategyName).get(getKey()).subscribe((result) => value = result);\n\t\t\t\treturn value === undefined ? defaultValue : value;\n\t\t\t},\n\t\t\tset: function(value) {\n\t\t\t\tStrategyIndex.get(strategyName).set(getKey(), value).subscribe(noop);\n\t\t\t}\n\t\t});\n\t\t\n\t\tfunction getKey() {\n\t\t\tif (storageKey !== undefined) return storageKey;\n\t\t\treturn storageKey = StorageKeyManager.normalize(rawKey);\n\t\t}\n\t}\n}\n\n","import {LocalStorageServiceProvider} from './localStorage';\nimport {Provider} from '@angular/core';\nimport {SessionStorageServiceProvider} from './sessionStorage';\n\nexport const Services: Provider[] = [\n\tLocalStorageServiceProvider,\n\tSessionStorageServiceProvider\n];\n","import {APP_INITIALIZER, Inject, InjectionToken, ModuleWithProviders, NgModule, Optional} from '@angular/core';\nimport {LocalStorageProvider, SessionStorageProvider} from './core/nativeStorage';\nimport {Services} from './services/index';\nimport {Strategies} from './strategies/index';\nimport {StrategyIndex} from './services/strategyIndex';\nimport {NgxWebstorageConfiguration} from './config';\nimport {StorageKeyManager} from './helpers/storageKeyManager';\n\nexport const LIB_CONFIG: InjectionToken<NgxWebstorageConfiguration> = new InjectionToken<NgxWebstorageConfiguration>('ngx_webstorage_config');\n\nexport function appInit(index: StrategyIndex) {\n\tindex.indexStrategies();\n\treturn () => StrategyIndex.index;\n}\n\n@NgModule({})\nexport class NgxWebstorageModule {\n\n\tconstructor(index: StrategyIndex, @Optional() @Inject(LIB_CONFIG) config: NgxWebstorageConfiguration) {\n\t\tif (config) StorageKeyManager.consumeConfiguration(config);\n\t\telse console.error('NgxWebstorage : Possible misconfiguration (The forRoot method usage is mandatory since the 3.0.0)');\n\t}\n\n\tstatic forRoot(config: NgxWebstorageConfiguration = {}): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: NgxWebstorageModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: LIB_CONFIG,\n\t\t\t\t\tuseValue: config,\n\t\t\t\t},\n\t\t\t\tLocalStorageProvider,\n\t\t\t\tSessionStorageProvider,\n\t\t\t\t...Services,\n\t\t\t\t...Strategies,\n\t\t\t\t{\n\t\t\t\t\tprovide: APP_INITIALIZER,\n\t\t\t\t\tuseFactory: appInit,\n\t\t\t\t\tdeps: [StrategyIndex],\n\t\t\t\t\tmulti: true\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t}\n\n}\n","import {StorageStrategies} from './constants/strategy';\nimport {DecoratorBuilder} from './helpers/decoratorBuilder';\n\nexport function LocalStorage(key?: string, defaultValue?: any) {\n\treturn function(prototype, propName) {\n\t\tDecoratorBuilder.buildSyncStrategyDecorator(StorageStrategies.Local, prototype, propName, key, defaultValue);\n\t};\n}\n\nexport function SessionStorage(key?: string, defaultValue?: any) {\n\treturn function(prototype, propName) {\n\t\tDecoratorBuilder.buildSyncStrategyDecorator(StorageStrategies.Session, prototype, propName, key, defaultValue);\n\t};\n}\n"]}